Creación de un clon de la página web de Google
Nota: vamos a hacer el diseño para móviles y para desktop

1) DISEÑO PARA MÓVILES (abrir google en el móvil)

Fase 1 Posicionamiento de los Contenedores:

1° Crear un archivo css para el diseño móvil y relacionarlo al documento html a través de <link>
2° Establecer las propiedades globales de CSS en el archivo creado.
*{
    box-sizing: border-box;
    border: 0;
    margin: 0;
}

html{
    font-size: 62.5%
}

3° Ubicar el contenedor <div>  como elemento padre de los contenedores header, main y footer y agregarle una clase
    <div class="main-container">

    </div>

4° Ubicar el contenedor <header> en el código, con el texto Header por dentro
    <header>
        Header
    </header>

5° Ubicar el contenedor <main> en el código, con el texto Main por dentro
        <main>
            Lorem ipsum dolor sit, amet consectetur adipisicing elit. Earum iusto voluptate veniam fugiat. Quia dicta culpa, magnam perspiciatis totam minus accusantium blanditiis labore asperiores corporis ipsam impedit deserunt repellendus ullam.
        </main>

6° Ubicar el contenedor <footer> en el código, con el texto Footer por dentro
    <footer>
        Footer
    </footer>

7° En el archivo css, agregarles un color de fondo ramdom con la propiedad CSS: background-color
header{
    background-color: rebeccapurple;
}

main{
    background-color: aqua;
}

footer{
    background-color: orange;
}
8° En archivo CSS, aplicar la propiedad display: flex al elemento padre <div>

.main-container{
    display: flex;
}

9° En archivo CSS, aplicar la propiedad flex-wrap: wrap
div{
    display: flex;
    flex-wrap: wrap;
}

10° En el archivo CSS, en cada elemento hijo que lo necesite (header, main y/o footer) añadir la siguiente propiedad flex-grow para que abarque el espacio sobrante en su fila.
header{
    background-color: rebeccapurple;
    flex-grow: 1;
}

main{
    background-color: aqua;
    flex-grow: 1;
}

footer{
    background-color: orange;
    flex-grow: 1;
}

11° En el archivo CSS, en cada elmento hijo que lo necesite (header, main y/o footer), añadirle un ancho del 100%
header{
    background-color: rebeccapurple;
    flex-grow: 1;
    width: 100%;
}

main{
    background-color: aqua;
    flex-grow: 1;
    width: 100%;
}

footer{
    background-color: orange;
    flex-grow: 1;
    width: 100%;
}

12° En el archivo CSS, a cada elemento hijo, agregar una propiedad para establecer su altura, y entre los 3 contenedores deben sumar 100%
header{
    background-color: rebeccapurple;
    flex-grow: 1;
    width: 100%;
    height: 15vh;
}

main{
    background-color: aqua;
    flex-grow: 1;
    width: 100%;
    height: 60vh;
}

footer{
    background-color: orange;
    flex-grow: 1;
    width: 100%;
    height: 25vh;
}

13° En la GIT bash agregar al STAGING AREA los archivos modificados
    a. Empezamos por el archivo index.html
         $ git add index.html
    b. Ahora el presente archivo
    c. Ahora la carpeta CSS
         $ git add CSS/
    d. Ahora la carpeta iconos
        $ git add Iconos/
14° En la GIT bash, realizar COMMIT para la FASE 1°
    $ git commit -m "Commit de la Fase 1 - posicionamiento de los contenedores"
   g
    Nota: Con un solo commit se envia todo lo del STAGING AREA

15° Realizar buena práctica: GIT PULL antes de enviar los cambios al repositorio remoto 
    $ git pull origin master
16° Enviar los cambios al repositorio remoto (Git Hub)
    $ git push origin master



Fase 2 Elaborar el Header 

  Nota: Quitar el color de fondo del contenedor para poder trabajar en el mismo (archivo CSS)
  1° Descargar los íconos para el HEADER y ubicarlos dentro de la carpeta "Íconos". En este caso los elaboré en figma y los exporté como SVG, salvo por el de user que lo descargué de internet.
  2° Identificar y ubicar todos los hijos del elemento <header> (agregarle un contenido de texto en su interior para identificarlos)
        <header>
            <picture>
                icono 1
            </picture>

            <nav>
                opciones
            </nav>

            <picture>
                icono 2
            </picture>

            <picture>
                foto user
            </picture>
        </header>
     
  3° Agregarles una clase general + clase única + un ID distintivo (este último solo cuando se considere necesario)
        <header>
            <picture class="header-child icon-one">
                Icono 1
            </picture>

            <nav class="header-child list-menu" >
                opciones
            </nav>

            <picture class="header-child icon-two">
                icono 2
            </picture>

            <picture class="header-child user-photo">
                foto user
            </picture>
        </header>

  4° En el archivo CSS, agregar a cada elemento hijo un color de fondo para distinguirlos.
     Propiedad: background-color
     Resultado:
.icon-one{
    background-color: #A3E4D7;
}
.list-menu{
    background-color: #48C9B0;
}
.icon-two{
    background-color: #138D75;
}
.user-photo{
    background-color: #2ECC71;
}


  5° Alinear los items en forma horizontal, aplicando display flex al padre <header>
     Propiedad: display:flex
     Nota: en el archivo css, movemos el selector del elmento HEADER de la FASE 1 a  la FASE 2:
header{
    flex-grow: 1;
    width: 100%;
    height: 15vh;
    display: flex;
}
   
 6° Distribuir uniformemente los hijos en el eje principal (horizontal)
    Propiedad: flex-grow 
    Resultados: Fallido
    
    Intentamos con:
    Propiedad: width (%)
    Resultado:

    .icon-one{
    background-color: #A3E4D7;
    width: 10%;
}
.list-menu{
    background-color: #48C9B0;
    width: 70%;
}
.icon-two{
    background-color: #138D75;
    flex-grow: 1;
    width: 10%;
}
.user-photo{
    background-color: #2ECC71;
    flex-grow: 1;
    width: 10%;
}

--> NOS QUEDAMOS AQUÍ 12/09/2022

 7° Identificar a su vez los hijos del primer hijo del HEADER
     Elemento: <img>
     Resultado: 

            <picture class="header-child icon-two">
                <div>
                    <img src="./Iconos/Iconos del Header/Icono_puntos.svg" alt="herramientas google">
                </div>
            </picture>

 8° Identificar a su vez los hijos, nietos, bisnietos del segundo hijo del HEADER
     Elemento hijo: <ul>
     Elemento nieto: <li> (dentro de cada li irá el elmento <a> para crear un link a otra página al hacer clic en c/opción del menú
     Resultado: 
            <nav class="header-child list-menu" >
                <ul>
                    <li>
                        <a href=".">
                            ALL
                        </a>
                    </li>
                    <li>
                        <a href=".">
                            IMAGES
                        </a>
                    </li>
                </ul>
            </nav>
 9° Identificar a su vez los hijos del tercer hijo del HEADER
     Elemento: <img>
     Resultado: 
            <picture class="header-child icon-two">
                <img src="./Iconos/Iconos del Header/Icono_puntos.png" alt="herramientas google">
            </picture>

10° Identificar a su vez los hijos del cuarto y último hijo del HEADER
     Elemento: <img>
     Resultado: 
            <picture class="header-child user-photo">
                <img src="./Iconos/Iconos del Header/user.png" alt="foto de usuario">
            </picture>

11° Disminuir el tamaño de la foto del USUARIO (estilo CSS)
   Propiedad: width y height 
   Resultado:
.user-photo img{
    width: 2.4rem;
    height: 2.4rem;
}

12° Disminuir la dimensión de altura del HEADER
    Propiedad: height
    Resultado: 

header{
    flex-grow: 1;
    width: 100%;
    height: 5vh;
    display: flex;
}

Nota: como la unidad de medida es "vh" si le disminuimos al HEADER le aumentamos en este caso al MAIN los 10vh disminuidos aquí

 13° Quitarle el padding lateral izquierdo al elemento <ul> 
     Propiedad: padding-left
     Resultado:
 
.list-menu ul{
    padding-left: 0;
}

 14° Quitarle las viñetas al elemento <ul>   
     Propiedad: list-style
     Resultado: 
.list-menu ul{
    padding-left: 0;
    list-style: none;
}

 15° Quitarle el subrayado a los elementos de el menú (en este caso aplicar al elmento <a> porque este es el origen del subrayado)
     Propiedad: text-decoration
     Resultado: 

.list-menu ul li a{
    text-decoration: none;
}

 16° Quitar el color de fondo de los hijos de HEADER

 17° Cambiar el color de la palabra "ALL" por azul de google
     Propiedad: color
     Resultado: 
.list-menu ul li:nth-child(1) a{
    color: #4285F4;
}

 18° Cambiar el color de la palabra "IMAGES" por gris
     Propiedad: color
     Resultado: 

.list-menu ul li:nth-child(2) a{
    color: #5F6368;
}

 19° Cambiar el grosor del texto para "ALL" e "IMAGES"
     Propiedad: font-weight
     Resultado: 

.list-menu ul li a{
    text-decoration: none;
    font-weight: 600;
}

 20° Alinear los elmentos (<li>) del menú de navegación en el eje horizontal (no funciona si se aplica flexbox)
     Propiedad:  display: inline-block
     Resultado: 

.list-menu ul li{
    display: inline-block;
}

 
 21° Alinear hijos del header en el medio del eje vertical
     Propiedad: align-items
     Resultado: 
header{
    flex-grow: 1;
    width: 100%;
    height: 5vh;
    display: flex;
    align-items: center;
}


 22° Quitar el width de cada hijo del HEADER
     Resultado: 
.icon-one{
}
.list-menu{
}
.icon-two{
}
.user-photo{
}

 23° Quitar el "height" del elemento padre HEADER
     Resultado:
header{
    flex-grow: 1;
    width: 100%;
    display: flex;
    align-items: center;
}


 24° Agregar un padding al primer ícono
     Propiedad: padding
     Resultado:

 .icon-one{
    padding: 1rem 1.5rem;
}

 25° Agregar un padding a los elementos el menú "ALL" e "IMAGES" para separarlos entre si  y para que la línea azúl que aparecerá abajo de ellos pueda sobresalir un poco del texto y pueda ubicarse a ese distancia abajo del texto (si en lugar de padding usara margin, no funcionaría porque los margenes no forman parte del elmento. Margin funciona si solo quisiera separar los elmentos)
     Propiedad: padding
     Resultado: 
.list-menu ul li{
    display: inline-block;
    padding: 1.1rem 0.5rem;
}

 26° Agregar un margin lateral al elemento "IMAGES" del menú
      Propiedad: margin-left
      Resultado:
.list-menu ul li:nth-child(2){
    margin-left: 0.2rem;
}

 27° Agregar la línea azul debajo de "ALL"
     Propiedad: Border-bottom
     Resultado:

.list-menu ul li:nth-child(1){
    border-bottom: 0.2rem solid #4285F4 ;
}

  28° Expandir el tamaño del contenedor del ícono 2 para empujar la foto del usuario al fondo del contenedor
      Propiedad: flex-grow
      Resultado: 
.icon-two{
    flex-grow: 1;
}

      
  29° Agregar un margen lateral derecho a la foto del usuario
      Propiedad: margin
      Resultado: 
.user-photo{
    margin: 0 0.6rem;
}

  30° Agregar un margen lateral derecho al icono de los 9 puntitos
      Propiedad: margin-right
      Resultado: 
.icon-two{
    flex-grow: 1;
    margin-right: 1rem;
}
  
  31° En el documento HMTL, agregar un hijo <div> al 3er hijo de HEADER <picture class="header-child icon-two". El elemento <img> pasará a ser ahora hijo de <div>
      Objetivo: Poder realizar un hoover al ícono de los 9 puntitos según se ve en el modelo, es decir un circulo color gris al rededor del ícono y esto no iba a ser posible si se aplicaba :hoover al contenedor <picture> o al mismo elemento <img>
      
      Resultado: 
            <picture class="header-child icon-two">
                <div>
                    <img src="./Iconos/Iconos del Header/Icono_puntos.svg" alt="herramientas google">
                </div>
            </picture>

  32° Establecer un display flex al 3er hijo de HEADER con el objetivo de poder enviar al fondo su nuevo hijo DIV
      Objetivo: Enviar al fondo a su hijo div (ya que a este no se le podía aplicar un text-align)
      Propiedad: display: flex
      Resultado: 
.icon-two{
    flex-grow: 1;
    margin-right: 1rem;
    display: flex ;
}

  33° El 3er hijo que ahora es un contenedor de display flex, solo tiene un hijo (div) el cual enviaremos al final del mismo
      Propiedad: justify-content
      Resultado: 
.icon-two{
    flex-grow: 1;
    margin-right: 1rem;
    display: flex ;
    justify-content: flex-end;
}

--> NOS QUEDAMOS AQUÍ 13/09/2022
   
  34° Ahora necesitamos que el contenedor <div> (hijo del tercer hijo de HEADER) crezca un poco más para poder aplicarle el :hoover
      Propiedad: padding 
      Resultado: 

.icon-two div{
    padding: 0.6rem;
}

  35° Convertir en círculo el contenedor <div> del icono de los 9 puntitos
      Objetivo: Realizar el :hover y que este sea redondo, de acuerdo al modelo
      Propiedad: border-radius
      Resultado: 

.icon-two div{
    padding: 0.6rem;
    border-radius: 50%;
}
  
  36° Aplicar la pseudo clase :hover al contenedor <div>, padre del ícono de los 9 puntitos
      Objetivo: Que al acercar el cursos sobre ese ícono, un círculo color gris aparezca.
      Propiedad: background-color aplicada al selector de la pseudoclase
      Resultado:

.icon-two div:hover{
    background-color: #F0F0F0;
}

  37° Nos hemos dado que el círculo que ahora es el contenedor <div> no es redondo totalmente. Esto se debe a sus dimensiones actuales (width: 26px  / height: 29.2 px)
      Para obtener un círculo perfecto tenemos que emparejar el width y que sea el mismo que el height
      Objetivo: Obtener un círculo perfecto al realizar el hover sobre el ícono de los 9 puntitos
      Propiedad: width
      Resultado: 

.icon-two div{
    padding: 0.6rem;
    border-radius: 50%;
    width: 2.92rem;
}

     Nota: recordar que como propiedad global se estableció un box-sizing: border-box

   38° Me he dado cuenta que el paso 34° de aplicar padding al <div> no era necesario, así que lo retiramos y en su lugar establecemos sus medidas (height y width a 29.2 px)
      Resultado: 

.icon-two div{
    border-radius: 50%;
    width: 2.92rem;
    height: 2.92rem;
}

   39° Vamos a disminuir el tamaño de los 9 puntitos (aplicado directamente al elemento <img>)
       Propiedad: width y height
       Resultado: 

.icon-two div img{
    width: 1.3rem;
    height: 1.3rem;
}

    
   40° Centrar vertical y horizontalmente el ícono de los 9 puntitos dentro de su padre <div> 
       Objetivo: Centrar en ambos ejes
       Propiedades: display: flex  /  justify-content: center  / aligh - items: center
       Resultado: 

.icon-two div{
    border-radius: 50%;
    width: 2.92rem;
    height: 2.92rem;
    display: flex;
    justify-content: center;
    align-items: center;
}


  41° Agrandar un poco el contenedor <div>
      Propiedades: width y height
      Resultado:

.icon-two div{
    border-radius: 50%;
    width: 3rem;
    height: 3rem;
    display: flex;
    justify-content: center;
    align-items: center;


  42° Tenemos que realizar lo mismo con la foto del usuario. 
     En el documento HMTL, agregar un hijo <div> al 4to hijo de HEADER <picture class="header-child user-photo". El elemento <img> pasará a ser ahora hijo de <div>
     Objetivo: Poder realizar un hoover a la foto del usuario según se ve en el modelo, es decir un circulo color gris al rededor del ícono y esto no iba a ser posible si se aplicaba :hoover al contenedor <picture> o al mismo elemento <img>
      
      Resultado: 
            <picture class="header-child user-photo">
                <div>
                    <img src="./Iconos/Iconos del Header/user.png" alt="foto de usuario">
                </div>
            </picture>

  43° Aumentar el tamaño del contenedor <div> al mismo tamaño del hijo <div> del tercer hijo de HEADER
      Objetivo: Igualar al tamaño del contenedor <div> del icono de 9 puntitos
      Propiedad: width y height
      Resultado: 
   
.user-photo div{
    width: 3rem;
    height: 3rem;
}

  44° Redondear el contenedor <div> de la foto del usuario
      Objetivo: Realizar el :hover y que este sea redondo, de acuerdo al modelo
      Propiedad: border-radius
      Resultado:

.user-photo div{
    width: 3rem;
    height: 3rem;
    border-radius: 50%;
}

  45° Aplicar la pseudo clase :hover al contenedor <div>, padre del la foto del usuario
      Objetivo: Que al acercar el cursos sobre la foto, un círculo color gris aparezca.
      Propiedad: background-color aplicada al selector de la pseudoclase
      Resultado:

.icon-two div:hover{
    background-color: #F0F0F0;
}

  
   46° Centrar vertical y horizontalmente la foto del usuario dentro de su padre <div> 
       Objetivo: Centrar en ambos ejes
       Propiedades: display: flex  /  justify-content: center  / aligh - items: center
       Resultado:       
 
.user-photo div{
    width: 3rem;
    height: 3rem;
    border-radius: 50%;
    display: flex;
    justify-content: center;
    align-items: center;
}

   47° Me he dado cuenta que el código utilizado en los hijos <div> del 3° y 4° hijo del <header> es el mismo, por lo que podemos unirlos en uno solo de la siguienta forma: 
       ANTES:

.icon-two div{
    border-radius: 50%;
    width: 3rem;
    height: 3rem;
    display: flex;
    justify-content: center;
    align-items: center;
}

.user-photo div{
    width: 3rem;
    height: 3rem;
    border-radius: 50%;
    display: flex;
    justify-content: center;
    align-items: center;
}
   
       DESPUÉS:

.icon-two div, .user-photo div{
    border-radius: 50%;
    width: 3rem;
    height: 3rem;
    display: flex;
    justify-content: center;
    align-items: center;
}

   48° Me he dado cuenta que el código utilizado para el :hover en los hijos <div> del 3° y 4° hijo del <header> es el mismo, por lo que podemos unirlos en uno solo de la siguienta forma:
       ANTES:

.icon-two div:hover{
    background-color: #F0F0F0;
}
.user-photo div:hover{
    background-color: #F0F0F0; 
}

       DESPUÉS: 

   49° Quitar el margen del tercer hijo del HEADER
       Objetivo: Acercar más el ícno de 9 puntitos a la foto del usuario
       Resultado: 

.icon-two{
    flex-grow: 1;
    display: flex ;
    justify-content: flex-end;
}

   50° Agregar el atributo  TITLE a los elementos div, hijos del 3° y 4° hijos del HEADER
       Objetivo: que al realizar un hover sobre ambos elementos aparezca la información requerida
       Resultado: 

            <picture class="header-child icon-two">
             -> <div title="Google apps">
                    <img src="./Iconos/Iconos del Header/Icono_puntos.svg" alt="herramientas google">
                </div>
            </picture>

            <picture class="header-child user-photo">
                <div 
             -> title="Google Account
 Nombre de usuario 
 abc@gmail.com">
                    <img src="./Iconos/Iconos del Header/user.png" alt="foto de usuario">
                </div>
            </picture>
        </header>

  51° Realizar el commit al servidor local y luego enviar los archivos al servidor remoto.


Fase 3 Elaborar el Main 

Nota: Quitar el color de fondo del contenedor para poder trabajar en el mismo (archivo CSS)
  1° Descargar los íconos y logos para el MAIN y ubicarlos dentro de la carpeta "Íconos" y "Logos" respectivamente. 
  2° Identificar y ubicar los hijos del elemento <main>
     Resultado: 
        <main>
            <picture>
                Logo Google
            </picture>
            <div>
                Buscador
            </div>
            <div>
                Texto 1
            </div>
            <div>
                Texto 2
            </div>
        </main>
  
  3° Agregarles una clase general + clase única + un ID distintivo (este último solo cuando se considere necesario)
     Resultado: 
        <main>
            <picture class="main-child main-logo">
                Logo Google
            </picture>

            <div class="main-child search-control">
                Buscador
            </div>

            <div class="main-child text-1">
                Texto 1
            </div>

            <div class="main-child blue-text">
                Texto 2
            </div>
        </main>
  4° En el archivo CSS, agregar a cada elemento hijo un color de fondo.
     Objetivo: Distinguir el espacio que ocupan en la pantalla
     Propiedad: background-color
     Resultado:

.main-logo{
    background-color: #4285F4;
}

.search-control{
    background-color: antiquewhite;
}

.text-1{
    background-color: #F0F0F0;
}

.blue-text{
    background-color: #5F6368;
}
  5° Establecer un display que permita alinear mas adelante a cada hijo en el centro
     Objetivo: Alineamiento central en el eje horizontal
     Propiedad:  -display:flex 
                 -flex-direction: column (para cambiar el eje principal)
     Resultado: 

main{
    flex-grow: 1;
    width: 100%;
    height: 70vh;
  ->display: flex;
  ->flex-direction: column;
}
  Nota: Hemos movido el selector del MAIN a la fase 3

   6° Distribuir la altura de los hijos del main de acuerdo al modelo.
      Objetivo: Delimitar un espacio para cada hijo (este dimensión puede varias mas adelante)
      Propiedad: - height
      Resultado:  
          
.main-logo{
    background-color: #4285F4;
  ->height: 25vh;
}

.search-control{
    background-color: antiquewhite;
  ->height: 10vh;
}

.text-1{
    background-color: #F0F0F0;
  ->height: 10vh;
}

.blue-text{
    background-color: #5F6368;
  ->height: 55vh;
}
     
   7° Identificar los hijos del hijo 1° del MAIN
      Elemento: <img>
      Resultado: 

            <picture class="main-child main-logo">
              -> <img src="./Logos/LogoGoogle-small.png" alt="logo-de.Google">
            </picture>

   8° Agregar la imagen large para desktop
      Objetivo: No perder resolución de la imagen en pantallas más grandes
      Elemento: <source>
      Resultado: 

            <picture class="main-child main-logo">
             -> <source media="(min-width: 800px)" srcset="./Logos/LogoGoogle-large.png">
                <img src="./Logos/LogoGoogle-small.png" alt="logo-de.Google">
            </picture>

   9°Identificar a los hijos, nietos , etc del hijo 2° del MAIN
     Resultado: 

            <div class="main-child search-control">
                <input type="search" name="búsqueda">
                <picture>
                    <img src="./Iconos/Iconos del Main/lupa.png" alt="Lupa" class="main-icon searching-icon">
                </picture>
                <picture>
                    <img src="./Iconos/Iconos del Main/micro.png" alt="búsquedaporvoz" class="main-icon talking-icon">
                </picture>
            </div>

  10° Identificar los hijos del hijo 3° del MAIN
      Elemento: <p>
      Resultado: 
            <div class="main-child text-1">
                <p> Google Offered in:</p>
            </div>


   11°Identificar a los hijos, nietos , etc del hijo 4° del MAIN
     Resultado: 

            <div class="main-child blue-text">
                <p> <a href="./"> Español (Latinoamérica) </a></p>
                <p> <a href="./"> Quechua </a></p>
            </div>

   12° Disminuir el tamaño de la lupa y el micrófono
       Propiedad: -height
                - width
       Resultado: 

.main-icon{
    width: 1.3rem;
    height: 1.3rem;
}

   13° Quitar el fondo del hijo 1° del MAIN
       Resultado:

.main-logo{
    height: 25vh;
}

   14° Disminuir el tamaño del logo de google
       Resultado: 

.main-logo img{
    width: 12.5rem;
    height: 3.8rem;  
}

   15° Centrar el logo de google horizontalmente
       Propiedad: - display: flex
                  - justify-content: center

       Resultado: 
.main-logo{
    height: 25vh;
  ->display: flex;
  ->justify-content: center;
}

   16° Quitar la altura del hijo 1° del MAIN
       Resultado: 

.main-logo{
    display: flex;
    justify-content: center;
}

   17° Agregar un margen superior e inferior al logo de Google. Tener en cuentra que el margen superior debe ser mayor que el menor
       Propiedad: - margin-top
                  - margin-bottom
       Resultado: 

.main-logo img{
    width: 12.5rem;
    height: 3.8rem;  
  ->margin-top: 5.5rem;
  ->margin-bottom: 2.5rem;
}

   18° Quitar el fondo del hijo 2° del MAIN
       Resultado:

.search-control{
    height: 10vh;
}

  19° Marcar el borde de la barra de búsqueda
      Propiedad: -border
      Resultado: 

.search-control input{
    border: 0.1rem solid #DFE1E5;
}

  20° Redondear los bordes de la barra de búsqueda
      Propiedad: -border-radius
      Resultado: 

.search-control input{
    border: 0.1rem solid #DFE1E5;
  ->border-radius: 1rem;
}

--> NOS QUEDAMOS AQUÍ 14/09/2022

   21° Agrandar la barra de búsqueda (según modelo mobile cubre casi todo el ancho de viewport)
       Propiedad: -width
       Resultado: 

.search-control input{
    border: 0.1rem solid #DFE1E5;
    border-radius: 1rem;
  ->width: 35rem;
}

   22° Quitarle la altura al contenedor de la barra de búsqueda y centrar la barra horizontalmente
       Propiedad:  - display:flex
                   - justify-content
       Resultado: 

.search-control{
    display: flex;
    justify-content: center;    
}

   23° Aumentar el ancho de la barra de búsqueda
       Propiedad: -height
       Resultado: 

.search-control input{
    border: 0.1rem solid #DFE1E5;
    border-radius: 1rem;
    width: 35rem;
  ->height: 3.3rem;
}

   24° Debido al incremento del ancho de la barra, tenemos que ajustar el redondeo de los bordes
       Resultado: 

.search-control input{
    border: 0.1rem solid #DFE1E5;
  ->border-radius: 2rem;
    width: 35rem;
    height: 3.3rem;
}

   

   25° Disminuir el tamaño de la lupa y el micrófono, para ello tenemos que modificar el tamaño de su contenedor primero y luego asignarle 100% como medidas a los íconos
       Nota: Estamos manejando el tamaño de los elementos <img> a través de su contenedor natural <picture>
       Resultado: 
        AJUSTE EN LOS CONTENEDORES: 

.search-control picture:nth-child(2){
  ->width: 1.5rem;
  ->height: 1.5rem;
}

.search-control picture:nth-child(3){
  ->width: 2rem;
  ->height: 2rem;
}

        AJUSTE EN AMBOS ÍCONOS (:

.main-icon{
    width: 100%;
    height: 100%;
}

   26° Ubicar la lupa y el micro encima de la barra de búsqueda (segun el modelo)
       Propiedad: - position: absolute (al elemento) - en este caso al <picture> de ambos íconos
                  - position: relative (al padre)

       Resultado: 

.search-control picture{
 -> position: absolute;
}

.search-control{
    display: flex;
    justify-content: center;   
 -> position: relative; 
}

    27° Ubicar la lupa en su posición final dentro de la barra de búsqueda: A LA IZQUIERDA
        Propiedad:
                   - left
                   - top

        Resultado: 

.search-control picture:nth-child(2){
    width: 1.5rem;
    height: 1.5rem;
  ->left: 1.5rem;
  ->top: 0.9rem;
}



    28° Ubicar el micrófono en su posición final dentro de la barra de búsqueda: A LA DERECHA
        Propiedad:
                   - right
                   - top

        Resultado: 

.search-control picture:nth-child(3){
    width: 2rem;
    height: 2rem;
  ->right: 1.5rem;
  ->top: 0.7rem;
}

   29° Disminuir la opacidad de la lupa
       Propiedad: - opacity

       Resultado: 

.searching-icon{
    opacity: 0.60;
}


   30° Quitarle la altura a los 2 últimos contenedores hijos del MAIN
       Resultado: 

.text-1{
    background-color: #F0F0F0;
}

.blue-text{
    background-color: #5F6368;
}

    31° Añadir una separación entra la barra de búsqueda y el texto inferior (Google offered in:)
        Propiedad: -margin-bottom

        Resultado: 

.search-control{
    display: flex;
    justify-content: center;   
    position: relative; 
  ->margin-bottom: 2.6rem;
}

     32° Centrar el texto "Google offered in:" y el texto en azul horizontalmente, para ello utilizaremos flexbox
         Propiedad:  - display:flex
                     - justify-content

         Resultado: 

.main-child{
    display: flex;
    justify-content: center;
}

 Nota: con este selector estamos aplicando esa propiedad a los 4 hijos del <main>, pero como todos requirieron al final esas propiedades no hay problema, incluso podríamos borrar las propiedades descritas de los selectores "main-logo" y "search-control" para no redundar


      33° Quitar el color de fondo de ambos textos

      34° Aplicar fuente "Quicksand" a todo el documento. Para ello debeos buscar la fuente en Google Fonts.
          Resultado: 

           HTML:

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
 -> <link rel="preconnect" href="https://fonts.googleapis.com">
 -> <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
 -> <link href="https://fonts.googleapis.com/css2?family=Quicksand:wght@300;500;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="./CSS/styleMobile.css"> <!-- Css para moviles-->
    <title>Document</title>
</head>

          CSS:

html{
    font-size: 62.5%;
 -> font-family: 'Quicksand', sans-serif;
}
     
     35° Cambiar el color, tamaño y gorsor del texto "Google offered in:"
         Propiedades:  -color
                       -font-size
                       -font-weight
         Resultado: 
.text-1 p{
    color: #4D5156;
    font-size: 1.1rem;
    font-weight: 600;
}

     36° Aplicar un margen inferior al hijo 3° del MAIN (contenedor del texto "Google offered in:")
         Propiedad: -margin-bottom
         Resultado:
 
.text-1{
    margin-bottom: 1rem;
}


     37° Quitar el subrayado al texto del hijo 4° del MAIN
         Propiedad: -text-decoration

         Resultado: 

.blue-text p a{
    text-decoration: none;
}



     38° Cambiar el color, tamaño y gorsor del texto "Google offered in:"
         Propiedades:  -color
                       -font-size
                       -font-weight
         Resultado: 

.blue-text p a{
    text-decoration: none;
  ->color: #4285F4;
  ->font-size: 1.1rem;
  ->font-weight: 600;
}

 Problemas detectados: 
  1) Los elementos lupa y micrófono, al agrandar la pantalla, pierden la posición establecida
  2) El logo de Google, al llegar a un ancho de pantalla de 800 px pierde calidad

PROBLEMA 1: A continuación vamos a aplicar mejoras en la barra de búsqueda para evitar que los elementos "Lupa" y "micrófono" de muevan al aumentar el tamaño de la pantalla:
     
     1° Quitar las propiedades position absolute y relative del hijo 2° del MAIN
        Resultado: 
.search-control picture{
    
}

.search-control{
    display: flex;
    justify-content: center;   
    margin-bottom: 2.6rem;
}


     2° Quitar las propiedades de ambos contenedores <picture> (contenedores de la lupa y el micro)
        Resultado: 

.search-control picture:nth-child(2){

}

.search-control picture:nth-child(3){

}

     3° Quitar las propiedades a ambos íconos (lupa y micrófono)
        Resultado: 

.main-icon{

}

     4° Quitar las propiedades del elmento <input>, solo dejamos la propiedad "border"
        Resultado: 

.search-control input{
    border: 0.1rem solid #DFE1E5;

}

     5°Reordenar los contenedores HTML para la barra de búsqueda
       Resultado:

            <form action="" class="main-child search-control">
                    <div class="search-control-outer">
                        <div class="search-control-border">
                                <picture class="search-control-part1">
                                    <span>
                                        <img src="./Iconos/Iconos del Main/lupa.png" alt="Lupa" class="main-icon searching-icon">
                                    </span>
                                </picture>
                                <input type="search" name="búsqueda">
                                <div class="search-control-part3">
                                    <div>
                                        <picture>
                                            <span>
                                                <img src="./Iconos/Iconos del Main/X.png" alt="Cerrar" class="main-icon closing-search">
                                            </span>
                                        </picture>
                                    </div>
                                    <div>
                                        <picture>
                                            <img src="./Iconos/Iconos del Main/micro.png" alt="Micrófono" class="main-icon voice-searching">                                        
                                        </picture>
                                    </div>
                                </div>
                        </div>
                    </div>
            </form>

        6° Borrar todas las propiedades CSS que tengan que ver con el segundo hijo del MAIN
       
        7° Establecer el ancho de la barra de búsqueda
           Propiedad: width
           Resultado: 

.search-control-outer{
    width: 35rem;
}

        8° Establecer que cuando la pantalla crezca, el ancho permancezca en lo establecido en el paso anterior
           Propiedad: max-width
           Resultado: 

.search-control-outer{
    width: 35rem;
    max-width: 35rem;
    margin: 0 auto;
}

       9° Vamos a trabajar con un contenedor más adentro (que también es <div>). 
          Alinear sus hijos en el mismo eje horizontal y en el centro
          Propiedad: - display: flex
                     - justify-content
          Resultado: 

.search-control-border{
    display: flex;
    justify-content: center;
}

        10° Establecer el borde de la barra de búsqueda (No se aplica al INPUT, sino al DIV que tiene la clase: search-control-border
            Propiedad: -Border
            Resultado: 

.search-control-border{
    display: flex;
    justify-content: center;
  ->border: 0.1rem solid #DFE1E5;
}
        
         11° Redonder el borde de la barra de búsqueda
             Resultado: 

.search-control-border{
    display: flex;
    justify-content: center;
    border: 0.1rem solid #DFE1E5;
  ->border-radius: 1rem;
}

        12° Aumentar la altura de la barra de búsqueda. Esto a su vez nos hace aumentar el border-radius
            Propiedad: - height
            Resultado: 

.search-control-border{
    display: flex;
    justify-content: center;
    border: 0.1rem solid #DFE1E5;
  ->border-radius: 2rem;
  ->height: 3.4rem;
}
 

       13° Aumentar el largo (width) del INPUT
           Propiedad: - width
           Resultado: 

.search-control-border input{
    width: 27rem;
}

       14° Incrementar el ancho del contenedor (picture) de la lupa
           Objetivo: Poder centrar a la lupa posteriormente
           Resultado: 
 
.search-control-border picture:nth-child(1){
    width: 2rem;
}

       15° Centrar la lupa
           Propiedades: -display: flex 
                        - justify-content
                        - align-items
           Resultados: 

.search-control-border picture:nth-child(1){
    width: 2.8rem;
  ->display: flex;
  ->justify-content: flex-start;
  ->align-items: center;
}

     16° Ubicar "X" y el micrófono en el mismo eje horizontal 
         Propiedades: - display: flex
                 
         Resultado: 

.search-control-part3{
    display: flex;
}
         
     17° Aumentar el ancho del contenedor de la "x" y el micrófono
         Propiedad: -width
         Resultado: 
.search-control-part3{
    width: 3.5rem;
    display: flex;
}

    18° Aumentar la altura de los contenedores DIV de la  "X" y el micrófono respectivamente
        Resultado: 

.search-control-part3 div{
    height: 100%;
}

   19° Distribuir uniformemente los contenedores DIV de la "x" y el micrófono dentro de su elemento padre DIV
       Propiedad: - flex-grow
       Resultado: 

.search-control-part3 div{
    height: 100%;
  ->flex-grow: 1;
}

   20° Alinear la "X" y el micrófono en el centro (en el eje vertical)
       Resultado: 

.search-control-part3 div{
    height: 100%;
    flex-grow: 1;
 -> display: flex;
}

.search-control-part3 div picture{
    flex-grow: 1;
    display: flex;
}

.search-control-part3 div picture span{
    flex-grow: 1;
    display: flex;
    justify-content: center;
    align-items: center;
}

.search-control-part3 div:nth-child(2) picture{
    justify-content: center;
    align-items: center;
}

   21° Aumentar el tamaño del micrófono y alinear
       Resultado:   
 
.voice-searching{
    width: 2rem;
    height: 2rem;
    margin-right: 0.5rem;
}

   22° Disminuir el tamaño de la "X" y esclarecer su color
       Resultado: 

.closing-search{
    width: 1rem;
    height: 1rem;
    opacity: 0.6;
}

    23° Reducir el tamaño del contendor INPUT
        Resultado: 

.search-control-border input{
    width: 24rem;
}

    24° Disminuir el tamaño del INPUT
        Resultado:
 
.search-control-border input{
   ->width: 23rem;
}
         
     25° Aumentar el tamaño del contenedor de clase "search-control-part3" ocupando la parte que sobra del contenedor "search-control-border"
         Propiedad: -flex-grow
         Resultado: 
             
.search-control-part3{
    width: 5rem;
    display: flex;
    flex: 1;
}

--> NOS QUEDAMOS AQUÍ 15/09/2022
     
     26° Disminuir el tamaño del contenedor de los icono "X" y "micrófono"
         Objetivo: poder dibujar el borde derecho que divide la "x" del "micrófono"
         Resultado: 

.search-control-part3 div picture{
    flex-grow: 1;
    display: flex;
  ->width: 80%;
  ->height: 80%;
}


    27° Centrar los contenedores de "x" y el "micrófono" porque al realizar el paso anterior, se descentraron
        Propiedad: align-items
        Resultado: 

.search-control-part3 div{
    height: 100%;
    flex-grow: 1;
    display: flex;
  ->align-items: center;
}

    28° Cambiar el margin-right del icono de "micrófono" por margin-left, ya que después de los cambios hechos, este se separó del borde derecho
         Resultado: 
.voice-searching{
    width: 2rem;
    height: 2rem;
  ->margin-left: 0.5rem;
}

  29° Trazar la líne divisoria del icono de "X" y el "micrófono"
      Propiedad: - border-right
      Resultado: 

.search-control-part3 div:nth-child(1) picture{
  -> border-right: 0.1rem solid #DADCE0;
} 

   30° Quitar el margin del paso 28°
       Resultado: 
.voice-searching{
    width: 2rem;
    height: 2rem;
}

   31° Agregar un padding derecho al contenedor "picture" del ícono de la X}
       Objetivo: Centrar a la línea dibujada entre la "X" y el "micrófono"
       Resultado: 

.search-control-part3 div:nth-child(1) picture{
    border-right: 0.1rem solid #DADCE0;
  ->padding-right: 0.5rem;
} 


PROBLEMA 2: El logo de Google, al llegar a un ancho de pantalla de 800 px pierde calidad
Razón probable: que la medida del logo debería estar en %

   1°  Quitarle las medidas al logo de Google
       Resultado: 

.main-logo img{
    margin-top: 5.5rem;
    margin-bottom: 2.5rem;
}

   2° Darle medidas al contenedor del logo de google y al logo 

      Resultado: 

.main-logo{
    display: flex;
    justify-content: center;
  ->width: 15rem;
  ->height: 9rem;
  ->margin: 0 auto;
}

.main-logo img{
    margin-top: 2.5rem;
    margin-bottom: 2rem;
  ->width: 100%;
}

   4° Eliminar propieades redundantes
      Resultados:

ANTES: 
.main-logo{
    display: flex;
    justify-content: center;
  ->width: 15rem;
  ->height: 9rem;
  ->margin: 0 auto;
}

DESPUÉS:
.main-logo{
    width: 15rem;
    height: 9rem;
    margin: 0 auto;
}



   5° Agregarle un DIV al contenedor PICTURE del logo de google

      Resultado: 

            <div>
                <picture class="main-child main-logo">
                    <source media="(min-width: 800px)" srcset="./Logos/LogoGoogle-large.png">
                    <img src="./Logos/LogoGoogle-small.png" alt="logo-de.Google">
                </picture>
            </div>

    6° Agregar un margen superior e inferior al contenedor PICTURE del logo de google
       Resultados: 

.main-logo{
    width: 15rem;
    height: 9rem;
    margin: 0 auto;
 -> margin-top: 2.8rem;
 -> margin-bottom: 0.5rem
}

Nota: llegué a la conclusión que cuando hagamos la adaptación para pantallas mayores a 800 px, ahí podremos solucionar este punto


______

   39° Eliminar la "x" porque en pantallas móviles no aparece
       Propiedad:  - display: none

       Resultado: 

.search-control-part3 div:nth-child(1) picture{
    border-right: 0.1rem solid #DADCE0;
    padding-right: 0.5rem;
 -> display: none;
} 


   40° Realizar el commit al servidor local y luego enviar los archivos al servidor remoto.
        
Fase 4 Elaborar el Footer

 
  1° Establecer el color de fondo de acuerdo al modelo. El color exacto lo obtenemos de Figma
     Propiedad: - background-color
     Resultado: 

footer{
    background-color: #F2F2F2;
}


  2° Identificar y ubicar todos los hijos del elemento <footer> (agregarle un contenido de texto en su interior para identificarlos)
     Resultado: 

        <footer>
            <div>
                Peru
            </div>
            <div>

            </div>
            <div>
                <ul>
                    <li> <a href="."> Dark theme:off</a></li>
                    <li> <a href="."> Settings</a></li>
                    <li> <a href="."> Privacy</a></li>
                    <li> <a href="."> Terms</a></li>
                </ul>
            </div>
            <div>
                <ul>
                    <li> <a href="."> Advertising</a></li>
                    <li> <a href="."> Business</a></li>
                    <li> <a href="."> About</a></li>
                </ul>
            </div>
        </footer>
     
  3° Agregarles una clase general + clase única + un ID distintivo (este último solo cuando se considere necesario)
     Resultado: 

        <footer >
            <div class="footer-child first-text">
                Peru
            </div>

            <div class="footer-child empty-text">

            </div>

            <div class="footer-child first-list">
                <ul>
                    <li> <a href="."> Dark theme:off</a></li>
                    <li> <a href="."> Settings</a></li>
                    <li> <a href="."> Privacy</a></li>
                    <li> <a href="."> Terms</a></li>
                </ul>
            </div>

            <div class="footer-child second-list">
                <ul>
                    <li> <a href="."> Advertising</a></li>
                    <li> <a href="."> Business</a></li>
                    <li> <a href="."> About</a></li>
                </ul>
            </div>
            
        </footer>


  4° Quitarle el subrayado al texto que está dentro de elementos <a>
     Propiead: -text-decoration
     Resultado: 

.footer-child a{
 -> text-decoration: none;
}


  5° Quitarle las viñetas a los elementos <li> del hijo 3° y 4° del FOOTER
     Propiedad: - list-style
                
     Resultado:

.footer-child ul{
    list-style: none;
}

  6° Quitarle el padding izquiero a los <ul> del hijo 3° y 4° del FOOTER
     Propiedad: - padding
                
     Resultado:

.footer-child ul{
    list-style: none;
 -> padding: 0;
}


  7° Cambiar el color de el texto de todo el footer
     Propiedad: -color
     Resultado: 

footer{
    background-color: #F2F2F2;
 -> color: #82858D;
}

.footer-child a{
    text-decoration: none;
 -> color:#82858D;
}

  8° Alinear horizontalmente los elementos del tercer y cuarto contenedor
      
.footer-child ul{
    list-style: none;
    padding: 0;
 -> display: flex;
}

 9° Alineat los elementos <li> en el medio del contenedor
    Propiedad: - justify-content
    Resultado: 

.footer-child ul{
    list-style: none;
    padding: 0;
    display: flex;
 -> justify-content: center;
}

 10° Aumentar el tamaño de letra de "Peru" y darle un mayor grosor
     Propiedad: - font-size
                - font-weigh
     Resultado: 

.first-text{
    font-size: 1.4rem;
    font-weight: 600;
}


  11° Aumentar el tamaño de letra del texto adicional del 3° y 4° hijo del footer
      Resultado: 

.first-list a, .second-list a{
  -> font-size: 1.1rem;
}

  12° Agregar un espaciado en el texto del 3° y 4° hijo del footer
      Propiedad: -column-gap
      Resultado: 

.footer-child ul{
    list-style: none;
    padding: 0;
    display: flex;
    justify-content: center;
 -> column-gap: 3rem;
}

  13° Agregar un elemento <p> en el 1° hijo del Footer
     Resultado :

            <div class="footer-child first-text">
           ->   <p>
                    Peru
                </p>
            </div>

  
  14° Aumentar la altura del 1° hijo del FOOTER
      Resultado: 

.first-text{
    font-size: 1.4rem;
    font-weight: 600;
 -> height: 3rem;
}

  15° Alinear verticalmente en el centro a la palabra PERU
      Resultado:

.first-text{
    font-size: 1.4rem;
    font-weight: 600;
    height: 3rem;
  ->display: flex;
  ->align-items: center;
}


  
  16° Aumentar la altura del 2° hijo del FOOTER
      Resultado: 

.empty-text{
    height: 4rem;
}

  17° Agregar un borde inferior en el hijo 1° y 2° del FOOTET
      Propiedad: border-bottom
      Resultado: 

.first-text{
    font-size: 1.4rem;
    font-weight: 600;
    height: 3rem;
    display: flex;
    align-items: center;
  ->border-bottom: 0.1rem solid #DBDDE1;
}

.empty-text{
    height: 4rem;
  ->border-bottom: 0.1rem solid #DBDDE1;
}


   18° Agregar los espaciados faltantes:
       Resultado: 

.first-list, .second-list{
 -> margin-top: 2rem;
}


  19° Agregar un margen izquiero a la palabra "Peru"
      Resutlado:

.first-text{
    padding-left: 1rem;
}
   
 Nota: en este caso utilizo padding en lugar de margin para que la el borde ingerior abarque todo el ancho de la pantalla

  20° Realizar el commit al servidor local y luego enviar los archivos al servidor remoto.
